<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1060</x>
      <y>370</y>
      <w>100</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>SDLApp</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>710</y>
      <w>230</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>IBlackjackView
-
/+newGame(int): void = 0/
/+nextRound(): void = 0/
/+stand(): void = 0/
/+drawCard(): void = 0/
/+split(): void = 0/
/+bet(long long): void = 0/

/+onStand(): void = 0/
/+onDrawCard(): void = 0/
/+onSplit(): void = 0/
/+onBet(long long): void = 0/

/+render(): void = 0/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1560</x>
      <y>610</y>
      <w>270</w>
      <h>530</h>
    </coordinates>
    <panel_attributes>BlackjackModel
-
+ BlackjackModel(int)
+ ~BlackjackModel()

+newGame (int): void

+isBust(int): bool
+InitialDeal(): void
+isHuman (): bool
+isBetTime() : bool

+moveDealer(): void
+makeMove (Move): bool

+makeBet (Money): bool
+stand(): bool
+split(): bool
+drawCard(): void

+setPlayer(string name, string moveStrat): void

+getCurrentPlayerHand(): Hand
+getFaceUpCards (): vector&lt;Card&gt;

+getName (): string
+getNumPlayers (): int
+getBalance (int): void
-
- mcDeck: Deck
- mcPlayers: vector&lt;Player&gt;
- mcDealerHand: Hand
- mcDealerAI: DealerAI
- mCurrentPlayerIndex: int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>620</y>
      <w>210</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>IBlackjackPresenter
-
/+newGame(int): void = 0/
/+nextRound(): void = 0/
/+endGame(): void = 0/
/+result(): void = 0/
/+addBalance(): void = 0/
/+getBalance(): void = 0/
/+getNumPlayers(): void = 0/
/+getName(): void = 0/
/+setName(): void = 0/
/+makeMove(): void = 0/
/+updateView(): void = 0/
/+stand(): void = 0/
/+stay(): void = 0/
/+drawCard(): void = 0/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1860</x>
      <y>760</y>
      <w>270</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>Money (JJ)
--
-mAmount: long long
--
+Money ()
+Money (long long)
+Money (Money&amp;)
+~Money ()

+operator= (Money&amp;): Money

&lt;&lt;friend&gt;&gt; +operator+ (const Money&amp;): Money
&lt;&lt;friend&gt;&gt; +operator- (const Money&amp;): Money

+setAmount (long long): void
+getAmount (): long long
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1620</x>
      <y>80</y>
      <w>180</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Card
-
+ Card(Suit, Value)
+ getSuit(): Suit
+ getValue(): Value
+ isFaceUp(): bool
+ flip(): void
-
- mSuit: Suit
- mValue: Value
- mbIsGlobalFaceUp: bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1650</x>
      <y>330</y>
      <w>170</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Deck
-
+ Deck()
+ Deck(int)

+ shuffle(): void
+ fillshuffle(): void

+ draw(): Card
+ peek(): Card

- populate(): void
-
- mNumDecks: int
- mCards: vector&lt;Card&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1720</x>
      <y>260</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1720</x>
      <y>540</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1450</x>
      <y>50</y>
      <w>100</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
Suit
-
Clubs
Spades
Hearts
Diamonds</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1960</x>
      <y>0</y>
      <w>100</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
Value
-
Ace
Two
Three
Four
Five
Six
Seven
Eight
Nine
Ten
Jack
Queen
King</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1540</x>
      <y>100</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1790</x>
      <y>110</y>
      <w>190</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2140</x>
      <y>490</y>
      <w>280</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>Player
-
+ Player() = delete
+ Player(IMoveStrategy&amp;)
+ Player(string, IMoveStrategy&amp;)
+ Player(string, Money, IMoveStrategy&amp;)

+endTurn(): void
+receiveCard(Card, int): void
+makeMove(Move&amp;): bool
+isHuman(): bool

+getFaceUpCards(): vector&lt;Card&gt;
+getHands(): vector&lt;Hand&gt;
+getCurrentHand(): Hand
+getNumHands(): int

-clearHand(): void
-
- mName: string
- mcHand: vector&lt;Hand&gt;
- mcMoney: Currency
- mCurrentHand: int
-mcMoveStrategy: MoveStrategy
-meStatus: Status</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2120</x>
      <y>830</y>
      <w>100</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;80.0;70.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>740</y>
      <w>340</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1790</x>
      <y>180</y>
      <w>170</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;250.0;150.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1870</x>
      <y>430</y>
      <w>200</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>Hand
-
+Hand()

+handValue(): int
+addCard(Card): void
+faceUpValue(): int
+faceDownValue(): int

+getFaceUpCards (): vector&lt;Card&gt;
+getHand (): vector&lt;Card&gt;
-
-mcCards: vector&lt;Card&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1780</x>
      <y>560</y>
      <w>110</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2060</x>
      <y>560</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>920</x>
      <y>760</y>
      <w>220</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>BlackjackTextView
-
+BlackjackTextView(ostream&amp;)
/+~BlackjackTextView()/

/+newGame(int): void/
/+nextRound(): void/
/+stand(): void/
/+drawCard(): void/
/+split(): void/
/+bet(long long): void/

/+onStand(): void/
/+onDrawCard(): void/
/+onSplit(): void/
/+onBet(long long): void/

/+render(): void/
-
-mPresenter: IBlackjackPresenter
-mcOut: ostream</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>770</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1610</x>
      <y>1180</y>
      <w>100</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
Move
-
DRAW
STAND
SPLIT</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1160</x>
      <y>900</y>
      <w>350</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>BlackjackPresenter
-
/+newGame(): void/
/+continue(): void/
/+endGame(): void/

/+result(): void/

/+addBalance(): void/
/+getBalance(): void/

/+getNumPlayers(): void/
/+getName(): void/
/+setName(): void/

/+stand(): void/
/+stay(): void/
/+drawCard(): void/

/+updateView(): void/

/+makeMove(): void/
-
-mModel: BlackjackModel
-mView: IBlackjackView</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1370</x>
      <y>520</y>
      <w>270</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>makeMove() returns false 
if illegal move is passed in
-
makeBet() return false if illegal bet</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2680</x>
      <y>290</y>
      <w>400</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>IMoveStrategy
-
/+ determineMove(Player&amp;, Move&amp;, vector&lt;Card&gt;&amp;): bool = 0/
/+ determineBet(Player&amp;, Money&amp;): void = 0/
/+ isHuman(): bool = 0/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2090</x>
      <y>350</y>
      <w>370</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>HumanMoveStrategy
-
/+ determineMove(Player&amp;, Move&amp;, vector&lt;Card&gt;&amp;): bool/
/+ determineBet(Player&amp;, Money&amp;): void/
/+ isHuman(): bool/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2680</x>
      <y>460</y>
      <w>410</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>/IComputerMoveStrategy/
-
/+ determineMove(Player&amp;, Move&amp;, vector&lt;Card&gt;&amp;): bool = 0/
/+ determineBet(Player&amp;, Money&amp;): void = 0/
/+ isHuman(): bool/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2410</x>
      <y>410</y>
      <w>290</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;60.0;90.0;60.0;10.0;270.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2140</x>
      <y>310</y>
      <w>270</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Returns false for Split if invalid
True otherwise</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2940</x>
      <y>600</y>
      <w>180</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Sets the Move parameter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1870</x>
      <y>630</y>
      <w>230</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
Status
-
BUST //Lose the round
LOSE //Kicked out of game
BLACKJACK //Bet + 150% of Bet
WIN //Bet + 100% of Bet</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>880</y>
      <w>60</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1340</x>
      <y>860</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1500</x>
      <y>960</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>780</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>800</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2440</x>
      <y>670</y>
      <w>370</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>DealerAI
-
/+ determineMove(Player&amp;, Move&amp;, vector&lt;Card&gt;&amp;): bool/
/+ determineBet(Player&amp;, Money&amp;): void/
/+ isHuman(): bool/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2850</x>
      <y>660</y>
      <w>380</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>CardCounterAI
-
/+ determineMove(Player&amp;, Move&amp;, vector&lt;Card&gt;&amp;): bool/
/+ determineBet(Player&amp;, Money&amp;): void/
/+ isHuman(): bool/
-
macCardsOnTable: vector&lt;Card&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>770</y>
      <w>800</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;300.0;360.0;300.0;360.0;200.0;780.0;200.0;780.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2250</x>
      <y>1070</y>
      <w>220</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>MoveStrategyFactory
-
makeStrategy(string): &amp;IMoveStrategy</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2470</x>
      <y>1020</y>
      <w>420</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Parameterized factory 
(makes moveStrats based on stratname, used in BlackjackModel::setPlayer)
(two ways of implementing: 
-this way where there's one factory that's edited whenever a new moveStrat 
is made, and outputs the list to choose from
-have this be a parent class and subclass a new factory with each moveStrat
subclass, which is more true to the factory method we saw in class, but then 
would have to include and make every factory in presenter and pass to model. 
(bad))</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>1090</y>
      <w>450</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;430.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2120</x>
      <y>420</y>
      <w>610</w>
      <h>550</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>590.0;10.0;590.0;30.0;370.0;30.0;370.0;100.0;310.0;100.0;310.0;530.0;10.0;530.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2720</x>
      <y>590</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2890</x>
      <y>590</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2810</x>
      <y>590</y>
      <w>30</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2660</x>
      <y>810</y>
      <w>410</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>DrunkAI (Optional)
-
/+ determineMove(Player&amp;, Move&amp;, vector&lt;Card&gt;&amp;): bool/
/+ determineBet(Player&amp;, Money&amp;): void/
/+ isHuman(): bool/
-
mShots: int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1940</x>
      <y>1130</y>
      <w>170</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enum&gt;&gt;
MoveStrategy
-
Human
CardCounterAI
DrunkAI</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>690</x>
      <y>170</y>
      <w>300</w>
      <h>520</h>
    </coordinates>
    <panel_attributes>BlackjackViewSDL
-
+BlackjackViewSDL()
+~BlackjackViewSDL()

/+newGame(int): void/
/+nextRound(): void /
/+stand(): void/
/+drawCard(): void/
/+split(): void/
/+bet(long long): void/
/+setNumPlayers(): void/

/+onStand(): void/
/+onDrawCard(): void/
/+onSplit(): void/
/+onBet(long long): void/
/+onSetNumPlayers(): void/



/+render (): void/
-
-mpcPresenter: IBlackjackPresenter*
-mcPlayers: vector&lt;PlayerViewSDL&gt;
-mcBetButton: SDLTextWidget
-mcDrawButton: SDLTextWidget
-mcSplitButton: SDLTextWidget
-mcStandButton: SDLTextWidget
-mcNumPlayersInput: SDLTextWidget
-mcNumHumanPlayersInput: SDLTextWidget
-mcBetAmountInput: SDLTextWidget
-mcDrawableWidgets: vector&lt;ISDLWidget*&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>230</x>
      <y>500</y>
      <w>350</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>PlayerViewSDL
-
+PlayerViewSDL(string)
/+~PlayerViewSDL()/

+discardHand(): void
+addCard(std::string, bool)
+draw(SDLApp&amp;): void
+showCards(): void
+setName(std::string): void
-
-mName: string
-mMoney: long long
-mcNameDisplay: SDLTextWidget*
-mcMoneyDisplay: SDLTextWidget*
-mcCards: std::vector&lt;std::unique_ptr&lt;CardViewSDL&gt;&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>370</x>
      <y>70</y>
      <w>190</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>DealerViewSDL
-
+DealerViewSDL(string)
/+~DealerViewSDL()/

+clear(): void
+draw(SDLApp&amp;): void
-
-mcName: SDLTextWidget*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>340</x>
      <y>300</y>
      <w>260</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>CardViewSDL
-
+CardViewSDL(SDLSprite*, SDLSprite*)
/+~CardViewSDL()/

+flip(): void
+clear(): void
+draw(SDLApp&amp;): void
-
-mcFaceUp: SDLSprite*
-mcFaceDown: SDLSprite*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>140</y>
      <w>170</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>150.0;90.0;80.0;90.0;80.0;10.0;18.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>460</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>510</y>
      <w>140</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1780</x>
      <y>1130</y>
      <w>180</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;160.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2100</x>
      <y>1130</y>
      <w>260</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>240.0;10.0;240.0;60.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>300</y>
      <w>100</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>SDLSprite</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1820</x>
      <y>680</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1650</x>
      <y>1130</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1700</x>
      <y>390</y>
      <w>1560</w>
      <h>870</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>1380.0;10.0;1540.0;10.0;1540.0;850.0;10.0;850.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>380</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2450</x>
      <y>350</y>
      <w>250</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2800</x>
      <y>420</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>310</y>
      <w>180</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>SDLTextWidget</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>290</x>
      <y>330</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>140</x>
      <y>130</y>
      <w>250</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;10.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>140</x>
      <y>360</y>
      <w>110</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>90.0;220.0;10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>740</x>
      <y>680</y>
      <w>30</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>310</y>
      <w>340</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;10.0;320.0;310.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>980</x>
      <y>260</y>
      <w>380</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>360.0;360.0;360.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>160</x>
      <y>260</y>
      <w>550</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>530.0;10.0;10.0;10.0;10.0;50.0</additional_attributes>
  </element>
</diagram>
